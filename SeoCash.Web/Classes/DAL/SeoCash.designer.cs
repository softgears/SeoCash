#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeoCash.Web.Classes.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SeoCash")]
	public partial class SeoCashDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWorkerQueueItem(SeoCash.Web.Classes.Entities.WorkerQueueItem instance);
    partial void UpdateWorkerQueueItem(SeoCash.Web.Classes.Entities.WorkerQueueItem instance);
    partial void DeleteWorkerQueueItem(SeoCash.Web.Classes.Entities.WorkerQueueItem instance);
    partial void InsertArticleCategory(SeoCash.Web.Classes.Entities.ArticleCategory instance);
    partial void UpdateArticleCategory(SeoCash.Web.Classes.Entities.ArticleCategory instance);
    partial void DeleteArticleCategory(SeoCash.Web.Classes.Entities.ArticleCategory instance);
    partial void InsertArticle(SeoCash.Web.Classes.Entities.Article instance);
    partial void UpdateArticle(SeoCash.Web.Classes.Entities.Article instance);
    partial void DeleteArticle(SeoCash.Web.Classes.Entities.Article instance);
    partial void InsertCategorySite(SeoCash.Web.Classes.Entities.CategorySite instance);
    partial void UpdateCategorySite(SeoCash.Web.Classes.Entities.CategorySite instance);
    partial void DeleteCategorySite(SeoCash.Web.Classes.Entities.CategorySite instance);
    partial void InsertContentCategory(SeoCash.Web.Classes.Entities.ContentCategory instance);
    partial void UpdateContentCategory(SeoCash.Web.Classes.Entities.ContentCategory instance);
    partial void DeleteContentCategory(SeoCash.Web.Classes.Entities.ContentCategory instance);
    partial void InsertContentSite(SeoCash.Web.Classes.Entities.ContentSite instance);
    partial void UpdateContentSite(SeoCash.Web.Classes.Entities.ContentSite instance);
    partial void DeleteContentSite(SeoCash.Web.Classes.Entities.ContentSite instance);
    partial void InsertEmailTemplate(SeoCash.Web.Classes.Entities.EmailTemplate instance);
    partial void UpdateEmailTemplate(SeoCash.Web.Classes.Entities.EmailTemplate instance);
    partial void DeleteEmailTemplate(SeoCash.Web.Classes.Entities.EmailTemplate instance);
    partial void InsertPermission(SeoCash.Web.Classes.Entities.Permission instance);
    partial void UpdatePermission(SeoCash.Web.Classes.Entities.Permission instance);
    partial void DeletePermission(SeoCash.Web.Classes.Entities.Permission instance);
    partial void InsertRolePermission(SeoCash.Web.Classes.Entities.RolePermission instance);
    partial void UpdateRolePermission(SeoCash.Web.Classes.Entities.RolePermission instance);
    partial void DeleteRolePermission(SeoCash.Web.Classes.Entities.RolePermission instance);
    partial void InsertRole(SeoCash.Web.Classes.Entities.Role instance);
    partial void UpdateRole(SeoCash.Web.Classes.Entities.Role instance);
    partial void DeleteRole(SeoCash.Web.Classes.Entities.Role instance);
    partial void InsertSetting(SeoCash.Web.Classes.Entities.Setting instance);
    partial void UpdateSetting(SeoCash.Web.Classes.Entities.Setting instance);
    partial void DeleteSetting(SeoCash.Web.Classes.Entities.Setting instance);
    partial void InsertSiteLayout(SeoCash.Web.Classes.Entities.SiteLayout instance);
    partial void UpdateSiteLayout(SeoCash.Web.Classes.Entities.SiteLayout instance);
    partial void DeleteSiteLayout(SeoCash.Web.Classes.Entities.SiteLayout instance);
    partial void InsertSiteMenuItem(SeoCash.Web.Classes.Entities.SiteMenuItem instance);
    partial void UpdateSiteMenuItem(SeoCash.Web.Classes.Entities.SiteMenuItem instance);
    partial void DeleteSiteMenuItem(SeoCash.Web.Classes.Entities.SiteMenuItem instance);
    partial void InsertTask(SeoCash.Web.Classes.Entities.Task instance);
    partial void UpdateTask(SeoCash.Web.Classes.Entities.Task instance);
    partial void DeleteTask(SeoCash.Web.Classes.Entities.Task instance);
    partial void InsertTaskAnswer(SeoCash.Web.Classes.Entities.TaskAnswer instance);
    partial void UpdateTaskAnswer(SeoCash.Web.Classes.Entities.TaskAnswer instance);
    partial void DeleteTaskAnswer(SeoCash.Web.Classes.Entities.TaskAnswer instance);
    partial void InsertUserActivityItem(SeoCash.Web.Classes.Entities.UserActivityItem instance);
    partial void UpdateUserActivityItem(SeoCash.Web.Classes.Entities.UserActivityItem instance);
    partial void DeleteUserActivityItem(SeoCash.Web.Classes.Entities.UserActivityItem instance);
    partial void InsertUserLoginHistoryItem(SeoCash.Web.Classes.Entities.UserLoginHistoryItem instance);
    partial void UpdateUserLoginHistoryItem(SeoCash.Web.Classes.Entities.UserLoginHistoryItem instance);
    partial void DeleteUserLoginHistoryItem(SeoCash.Web.Classes.Entities.UserLoginHistoryItem instance);
    partial void InsertUser(SeoCash.Web.Classes.Entities.User instance);
    partial void UpdateUser(SeoCash.Web.Classes.Entities.User instance);
    partial void DeleteUser(SeoCash.Web.Classes.Entities.User instance);
    partial void InsertSitePage(SeoCash.Web.Classes.Entities.SitePage instance);
    partial void UpdateSitePage(SeoCash.Web.Classes.Entities.SitePage instance);
    partial void DeleteSitePage(SeoCash.Web.Classes.Entities.SitePage instance);
    #endregion
		
		public SeoCashDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SeoCashConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SeoCashDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SeoCashDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SeoCashDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SeoCashDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.WorkerQueueItem> WorkerQueueItems
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.WorkerQueueItem>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.ArticleCategory> ArticleCategories
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.ArticleCategory>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.Article> Articles
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.Article>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.CategorySite> CategorySites
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.CategorySite>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.ContentCategory> ContentCategories
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.ContentCategory>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.ContentSite> ContentSites
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.ContentSite>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.EmailTemplate> EmailTemplates
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.EmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.Permission> Permissions
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.Permission>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.RolePermission> RolePermissions
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.RolePermission>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.Role> Roles
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.Role>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.Setting> Settings
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.Setting>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.SiteLayout> SiteLayouts
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.SiteLayout>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.SiteMenuItem> SiteMenuItems
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.SiteMenuItem>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.Task> Tasks
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.Task>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.TaskAnswer> TaskAnswers
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.TaskAnswer>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.UserActivityItem> UserActivityItems
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.UserActivityItem>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.UserLoginHistoryItem> UserLoginHistoryItems
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.UserLoginHistoryItem>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.User> Users
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.User>();
			}
		}
		
		public System.Data.Linq.Table<SeoCash.Web.Classes.Entities.SitePage> SitePages
		{
			get
			{
				return this.GetTable<SeoCash.Web.Classes.Entities.SitePage>();
			}
		}
	}
}
namespace SeoCash.Web.Classes.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkerQueueItems")]
	public partial class WorkerQueueItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private short _ItemType;
		
		private string _Data;
		
		private bool _Processed;
		
		private string _Exception;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateProcessStart;
		
		private System.Nullable<System.DateTime> _DateProcessEnd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnItemTypeChanging(short value);
    partial void OnItemTypeChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateProcessStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateProcessStartChanged();
    partial void OnDateProcessEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateProcessEndChanged();
    #endregion
		
		public WorkerQueueItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="SmallInt NOT NULL")]
		public short ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="NVarChar(MAX)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateProcessStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateProcessStart
		{
			get
			{
				return this._DateProcessStart;
			}
			set
			{
				if ((this._DateProcessStart != value))
				{
					this.OnDateProcessStartChanging(value);
					this.SendPropertyChanging();
					this._DateProcessStart = value;
					this.SendPropertyChanged("DateProcessStart");
					this.OnDateProcessStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateProcessEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateProcessEnd
		{
			get
			{
				return this._DateProcessEnd;
			}
			set
			{
				if ((this._DateProcessEnd != value))
				{
					this.OnDateProcessEndChanging(value);
					this.SendPropertyChanging();
					this._DateProcessEnd = value;
					this.SendPropertyChanged("DateProcessEnd");
					this.OnDateProcessEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleCategories")]
	public partial class ArticleCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SiteId;
		
		private System.Nullable<long> _ParentId;
		
		private string _Title;
		
		private string _SeoUrl;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<ArticleCategory> _ArticleCategories;
		
		private EntitySet<Article> _Articles;
		
		private EntityRef<ArticleCategory> _ArticleCategory1;
		
		private EntityRef<ContentSite> _ContentSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSeoUrlChanging(string value);
    partial void OnSeoUrlChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public ArticleCategory()
		{
			this._ArticleCategories = new EntitySet<ArticleCategory>(new Action<ArticleCategory>(this.attach_ArticleCategories), new Action<ArticleCategory>(this.detach_ArticleCategories));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._ArticleCategory1 = default(EntityRef<ArticleCategory>);
			this._ContentSite = default(EntityRef<ContentSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					if (this._ContentSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._ArticleCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoUrl", DbType="NVarChar(MAX)")]
		public string SeoUrl
		{
			get
			{
				return this._SeoUrl;
			}
			set
			{
				if ((this._SeoUrl != value))
				{
					this.OnSeoUrlChanging(value);
					this.SendPropertyChanging();
					this._SeoUrl = value;
					this.SendPropertyChanged("SeoUrl");
					this.OnSeoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(MAX)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCategory_ArticleCategory", Storage="_ArticleCategories", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<ArticleCategory> ArticleCategories
		{
			get
			{
				return this._ArticleCategories;
			}
			set
			{
				this._ArticleCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCategory_Article", Storage="_Articles", ThisKey="Id", OtherKey="ArticleCategoryId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCategory_ArticleCategory", Storage="_ArticleCategory1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public ArticleCategory ArticleCategory1
		{
			get
			{
				return this._ArticleCategory1.Entity;
			}
			set
			{
				ArticleCategory previousValue = this._ArticleCategory1.Entity;
				if (((previousValue != value) 
							|| (this._ArticleCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleCategory1.Entity = null;
						previousValue.ArticleCategories.Remove(this);
					}
					this._ArticleCategory1.Entity = value;
					if ((value != null))
					{
						value.ArticleCategories.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ArticleCategory1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_ArticleCategory", Storage="_ContentSite", ThisKey="SiteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentSite ContentSite
		{
			get
			{
				return this._ContentSite.Entity;
			}
			set
			{
				ContentSite previousValue = this._ContentSite.Entity;
				if (((previousValue != value) 
							|| (this._ContentSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSite.Entity = null;
						previousValue.ArticleCategories.Remove(this);
					}
					this._ContentSite.Entity = value;
					if ((value != null))
					{
						value.ArticleCategories.Add(this);
						this._SiteId = value.Id;
					}
					else
					{
						this._SiteId = default(long);
					}
					this.SendPropertyChanged("ContentSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleCategories(ArticleCategory entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCategory1 = this;
		}
		
		private void detach_ArticleCategories(ArticleCategory entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCategory1 = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCategory = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _SiteId;
		
		private long _ContentCategoryId;
		
		private long _ArticleCategoryId;
		
		private short _Status;
		
		private string _Title;
		
		private string _HTMLTitle;
		
		private string _Content;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private string _SeoRoute;
		
		private bool _AllowComments;
		
		private bool _DisableAds;
		
		private short _RevenueType;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<System.DateTime> _DatePublished;
		
		private EntityRef<ArticleCategory> _ArticleCategory;
		
		private EntityRef<ContentCategory> _ContentCategory;
		
		private EntityRef<ContentSite> _ContentSite;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnContentCategoryIdChanging(long value);
    partial void OnContentCategoryIdChanged();
    partial void OnArticleCategoryIdChanging(long value);
    partial void OnArticleCategoryIdChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHTMLTitleChanging(string value);
    partial void OnHTMLTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnSeoRouteChanging(string value);
    partial void OnSeoRouteChanged();
    partial void OnAllowCommentsChanging(bool value);
    partial void OnAllowCommentsChanged();
    partial void OnDisableAdsChanging(bool value);
    partial void OnDisableAdsChanged();
    partial void OnRevenueTypeChanging(short value);
    partial void OnRevenueTypeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnDatePublishedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePublishedChanged();
    #endregion
		
		public Article()
		{
			this._ArticleCategory = default(EntityRef<ArticleCategory>);
			this._ContentCategory = default(EntityRef<ContentCategory>);
			this._ContentSite = default(EntityRef<ContentSite>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					if (this._ContentSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentCategoryId", DbType="BigInt NOT NULL")]
		public long ContentCategoryId
		{
			get
			{
				return this._ContentCategoryId;
			}
			set
			{
				if ((this._ContentCategoryId != value))
				{
					if (this._ContentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ContentCategoryId = value;
					this.SendPropertyChanged("ContentCategoryId");
					this.OnContentCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCategoryId", DbType="BigInt NOT NULL")]
		public long ArticleCategoryId
		{
			get
			{
				return this._ArticleCategoryId;
			}
			set
			{
				if ((this._ArticleCategoryId != value))
				{
					if (this._ArticleCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleCategoryId = value;
					this.SendPropertyChanged("ArticleCategoryId");
					this.OnArticleCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLTitle", DbType="NVarChar(MAX)")]
		public string HTMLTitle
		{
			get
			{
				return this._HTMLTitle;
			}
			set
			{
				if ((this._HTMLTitle != value))
				{
					this.OnHTMLTitleChanging(value);
					this.SendPropertyChanging();
					this._HTMLTitle = value;
					this.SendPropertyChanged("HTMLTitle");
					this.OnHTMLTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(MAX)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoRoute", DbType="NVarChar(255)")]
		public string SeoRoute
		{
			get
			{
				return this._SeoRoute;
			}
			set
			{
				if ((this._SeoRoute != value))
				{
					this.OnSeoRouteChanging(value);
					this.SendPropertyChanging();
					this._SeoRoute = value;
					this.SendPropertyChanged("SeoRoute");
					this.OnSeoRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowComments", DbType="Bit NOT NULL")]
		public bool AllowComments
		{
			get
			{
				return this._AllowComments;
			}
			set
			{
				if ((this._AllowComments != value))
				{
					this.OnAllowCommentsChanging(value);
					this.SendPropertyChanging();
					this._AllowComments = value;
					this.SendPropertyChanged("AllowComments");
					this.OnAllowCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableAds", DbType="Bit NOT NULL")]
		public bool DisableAds
		{
			get
			{
				return this._DisableAds;
			}
			set
			{
				if ((this._DisableAds != value))
				{
					this.OnDisableAdsChanging(value);
					this.SendPropertyChanging();
					this._DisableAds = value;
					this.SendPropertyChanged("DisableAds");
					this.OnDisableAdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueType", DbType="SmallInt NOT NULL")]
		public short RevenueType
		{
			get
			{
				return this._RevenueType;
			}
			set
			{
				if ((this._RevenueType != value))
				{
					this.OnRevenueTypeChanging(value);
					this.SendPropertyChanging();
					this._RevenueType = value;
					this.SendPropertyChanged("RevenueType");
					this.OnRevenueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePublished", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePublished
		{
			get
			{
				return this._DatePublished;
			}
			set
			{
				if ((this._DatePublished != value))
				{
					this.OnDatePublishedChanging(value);
					this.SendPropertyChanging();
					this._DatePublished = value;
					this.SendPropertyChanged("DatePublished");
					this.OnDatePublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCategory_Article", Storage="_ArticleCategory", ThisKey="ArticleCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ArticleCategory ArticleCategory
		{
			get
			{
				return this._ArticleCategory.Entity;
			}
			set
			{
				ArticleCategory previousValue = this._ArticleCategory.Entity;
				if (((previousValue != value) 
							|| (this._ArticleCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleCategory.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._ArticleCategory.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ArticleCategoryId = value.Id;
					}
					else
					{
						this._ArticleCategoryId = default(long);
					}
					this.SendPropertyChanged("ArticleCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentCategory_Article", Storage="_ContentCategory", ThisKey="ContentCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ContentCategory ContentCategory
		{
			get
			{
				return this._ContentCategory.Entity;
			}
			set
			{
				ContentCategory previousValue = this._ContentCategory.Entity;
				if (((previousValue != value) 
							|| (this._ContentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentCategory.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._ContentCategory.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ContentCategoryId = value.Id;
					}
					else
					{
						this._ContentCategoryId = default(long);
					}
					this.SendPropertyChanged("ContentCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_Article", Storage="_ContentSite", ThisKey="SiteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentSite ContentSite
		{
			get
			{
				return this._ContentSite.Entity;
			}
			set
			{
				ContentSite previousValue = this._ContentSite.Entity;
				if (((previousValue != value) 
							|| (this._ContentSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSite.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._ContentSite.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._SiteId = value.Id;
					}
					else
					{
						this._SiteId = default(long);
					}
					this.SendPropertyChanged("ContentSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategorySites")]
	public partial class CategorySite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CategoryId;
		
		private long _SiteId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<ContentCategory> _ContentCategory;
		
		private EntityRef<ContentSite> _ContentSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(long value);
    partial void OnCategoryIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public CategorySite()
		{
			this._ContentCategory = default(EntityRef<ContentCategory>);
			this._ContentSite = default(EntityRef<ContentSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="BigInt NOT NULL")]
		public long CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._ContentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					if (this._ContentSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentCategory_CategorySite", Storage="_ContentCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public ContentCategory ContentCategory
		{
			get
			{
				return this._ContentCategory.Entity;
			}
			set
			{
				ContentCategory previousValue = this._ContentCategory.Entity;
				if (((previousValue != value) 
							|| (this._ContentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentCategory.Entity = null;
						previousValue.CategorySites.Remove(this);
					}
					this._ContentCategory.Entity = value;
					if ((value != null))
					{
						value.CategorySites.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(long);
					}
					this.SendPropertyChanged("ContentCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_CategorySite", Storage="_ContentSite", ThisKey="SiteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentSite ContentSite
		{
			get
			{
				return this._ContentSite.Entity;
			}
			set
			{
				ContentSite previousValue = this._ContentSite.Entity;
				if (((previousValue != value) 
							|| (this._ContentSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSite.Entity = null;
						previousValue.CategorySites.Remove(this);
					}
					this._ContentSite.Entity = value;
					if ((value != null))
					{
						value.CategorySites.Add(this);
						this._SiteId = value.Id;
					}
					else
					{
						this._SiteId = default(long);
					}
					this.SendPropertyChanged("ContentSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentCategories")]
	public partial class ContentCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _DisplayName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<CategorySite> _CategorySites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public ContentCategory()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._CategorySites = new EntitySet<CategorySite>(new Action<CategorySite>(this.attach_CategorySites), new Action<CategorySite>(this.detach_CategorySites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentCategory_Article", Storage="_Articles", ThisKey="Id", OtherKey="ContentCategoryId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentCategory_CategorySite", Storage="_CategorySites", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<CategorySite> CategorySites
		{
			get
			{
				return this._CategorySites;
			}
			set
			{
				this._CategorySites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ContentCategory = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ContentCategory = null;
		}
		
		private void attach_CategorySites(CategorySite entity)
		{
			this.SendPropertyChanging();
			entity.ContentCategory = this;
		}
		
		private void detach_CategorySites(CategorySite entity)
		{
			this.SendPropertyChanging();
			entity.ContentCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentSites")]
	public partial class ContentSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _Title;
		
		private string _Description;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private string _Subdomain;
		
		private string _HostName;
		
		private short _Status;
		
		private string _DefaultDesign;
		
		private System.Nullable<long> _YandexCounterId;
		
		private string _HTMLTitle;
		
		private string _CommonHeaderIncludes;
		
		private string _CommonFooterIncludes;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<ArticleCategory> _ArticleCategories;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<CategorySite> _CategorySites;
		
		private EntitySet<SiteLayout> _SiteLayouts;
		
		private EntitySet<SiteMenuItem> _SiteMenuItems;
		
		private EntitySet<SitePage> _SitePages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnSubdomainChanging(string value);
    partial void OnSubdomainChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnDefaultDesignChanging(string value);
    partial void OnDefaultDesignChanged();
    partial void OnYandexCounterIdChanging(System.Nullable<long> value);
    partial void OnYandexCounterIdChanged();
    partial void OnHTMLTitleChanging(string value);
    partial void OnHTMLTitleChanged();
    partial void OnCommonHeaderIncludesChanging(string value);
    partial void OnCommonHeaderIncludesChanged();
    partial void OnCommonFooterIncludesChanging(string value);
    partial void OnCommonFooterIncludesChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public ContentSite()
		{
			this._ArticleCategories = new EntitySet<ArticleCategory>(new Action<ArticleCategory>(this.attach_ArticleCategories), new Action<ArticleCategory>(this.detach_ArticleCategories));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._CategorySites = new EntitySet<CategorySite>(new Action<CategorySite>(this.attach_CategorySites), new Action<CategorySite>(this.detach_CategorySites));
			this._SiteLayouts = new EntitySet<SiteLayout>(new Action<SiteLayout>(this.attach_SiteLayouts), new Action<SiteLayout>(this.detach_SiteLayouts));
			this._SiteMenuItems = new EntitySet<SiteMenuItem>(new Action<SiteMenuItem>(this.attach_SiteMenuItems), new Action<SiteMenuItem>(this.detach_SiteMenuItems));
			this._SitePages = new EntitySet<SitePage>(new Action<SitePage>(this.attach_SitePages), new Action<SitePage>(this.detach_SitePages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(MAX)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subdomain", DbType="NVarChar(50)")]
		public string Subdomain
		{
			get
			{
				return this._Subdomain;
			}
			set
			{
				if ((this._Subdomain != value))
				{
					this.OnSubdomainChanging(value);
					this.SendPropertyChanging();
					this._Subdomain = value;
					this.SendPropertyChanged("Subdomain");
					this.OnSubdomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(255)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDesign", DbType="NVarChar(255)")]
		public string DefaultDesign
		{
			get
			{
				return this._DefaultDesign;
			}
			set
			{
				if ((this._DefaultDesign != value))
				{
					this.OnDefaultDesignChanging(value);
					this.SendPropertyChanging();
					this._DefaultDesign = value;
					this.SendPropertyChanged("DefaultDesign");
					this.OnDefaultDesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YandexCounterId", DbType="BigInt")]
		public System.Nullable<long> YandexCounterId
		{
			get
			{
				return this._YandexCounterId;
			}
			set
			{
				if ((this._YandexCounterId != value))
				{
					this.OnYandexCounterIdChanging(value);
					this.SendPropertyChanging();
					this._YandexCounterId = value;
					this.SendPropertyChanged("YandexCounterId");
					this.OnYandexCounterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLTitle", DbType="NVarChar(255)")]
		public string HTMLTitle
		{
			get
			{
				return this._HTMLTitle;
			}
			set
			{
				if ((this._HTMLTitle != value))
				{
					this.OnHTMLTitleChanging(value);
					this.SendPropertyChanging();
					this._HTMLTitle = value;
					this.SendPropertyChanged("HTMLTitle");
					this.OnHTMLTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonHeaderIncludes", DbType="NVarChar(MAX)")]
		public string CommonHeaderIncludes
		{
			get
			{
				return this._CommonHeaderIncludes;
			}
			set
			{
				if ((this._CommonHeaderIncludes != value))
				{
					this.OnCommonHeaderIncludesChanging(value);
					this.SendPropertyChanging();
					this._CommonHeaderIncludes = value;
					this.SendPropertyChanged("CommonHeaderIncludes");
					this.OnCommonHeaderIncludesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonFooterIncludes", DbType="NVarChar(MAX)")]
		public string CommonFooterIncludes
		{
			get
			{
				return this._CommonFooterIncludes;
			}
			set
			{
				if ((this._CommonFooterIncludes != value))
				{
					this.OnCommonFooterIncludesChanging(value);
					this.SendPropertyChanging();
					this._CommonFooterIncludes = value;
					this.SendPropertyChanged("CommonFooterIncludes");
					this.OnCommonFooterIncludesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_ArticleCategory", Storage="_ArticleCategories", ThisKey="Id", OtherKey="SiteId")]
		public EntitySet<ArticleCategory> ArticleCategories
		{
			get
			{
				return this._ArticleCategories;
			}
			set
			{
				this._ArticleCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_Article", Storage="_Articles", ThisKey="Id", OtherKey="SiteId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_CategorySite", Storage="_CategorySites", ThisKey="Id", OtherKey="SiteId")]
		public EntitySet<CategorySite> CategorySites
		{
			get
			{
				return this._CategorySites;
			}
			set
			{
				this._CategorySites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_SiteLayout", Storage="_SiteLayouts", ThisKey="Id", OtherKey="SiteId")]
		public EntitySet<SiteLayout> SiteLayouts
		{
			get
			{
				return this._SiteLayouts;
			}
			set
			{
				this._SiteLayouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_SiteMenuItem", Storage="_SiteMenuItems", ThisKey="Id", OtherKey="SiteId")]
		public EntitySet<SiteMenuItem> SiteMenuItems
		{
			get
			{
				return this._SiteMenuItems;
			}
			set
			{
				this._SiteMenuItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_SitePage", Storage="_SitePages", ThisKey="Id", OtherKey="SiteId")]
		public EntitySet<SitePage> SitePages
		{
			get
			{
				return this._SitePages;
			}
			set
			{
				this._SitePages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleCategories(ArticleCategory entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = this;
		}
		
		private void detach_ArticleCategories(ArticleCategory entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = null;
		}
		
		private void attach_CategorySites(CategorySite entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = this;
		}
		
		private void detach_CategorySites(CategorySite entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = null;
		}
		
		private void attach_SiteLayouts(SiteLayout entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = this;
		}
		
		private void detach_SiteLayouts(SiteLayout entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = null;
		}
		
		private void attach_SiteMenuItems(SiteMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = this;
		}
		
		private void detach_SiteMenuItems(SiteMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = null;
		}
		
		private void attach_SitePages(SitePage entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = this;
		}
		
		private void detach_SitePages(SitePage entity)
		{
			this.SendPropertyChanging();
			entity.ContentSite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailTemplates")]
	public partial class EmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _DisplayName;
		
		private string _Template;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public EmailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _PermissionGroup;
		
		private EntitySet<RolePermission> _RolePermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPermissionGroupChanging(string value);
    partial void OnPermissionGroupChanged();
    #endregion
		
		public Permission()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionGroup", DbType="NVarChar(255)")]
		public string PermissionGroup
		{
			get
			{
				return this._PermissionGroup;
			}
			set
			{
				if ((this._PermissionGroup != value))
				{
					this.OnPermissionGroupChanging(value);
					this.SendPropertyChanging();
					this._PermissionGroup = value;
					this.SendPropertyChanged("PermissionGroup");
					this.OnPermissionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_RolePermissions", ThisKey="Id", OtherKey="PermissionId")]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolePermissions")]
	public partial class RolePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RoleId;
		
		private long _PermissionId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnPermissionIdChanging(long value);
    partial void OnPermissionIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public RolePermission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="BigInt NOT NULL")]
		public long PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(long);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(long);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SystemName;
		
		private string _DisplayName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<RolePermission> _RolePermissions;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSystemNameChanging(string value);
    partial void OnSystemNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Role()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SystemName
		{
			get
			{
				return this._SystemName;
			}
			set
			{
				if ((this._SystemName != value))
				{
					this.OnSystemNameChanging(value);
					this.SendPropertyChanging();
					this._SystemName = value;
					this.SendPropertyChanged("SystemName");
					this.OnSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_RolePermissions", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Key;
		
		private string _Description;
		
		private string _Group;
		
		private string _Value;
		
		private short _DataType;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDataTypeChanging(short value);
    partial void OnDataTypeChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(255)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="SmallInt NOT NULL")]
		public short DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteLayouts")]
	public partial class SiteLayout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SiteId;
		
		private string _Title;
		
		private short _Type;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<ContentSite> _ContentSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public SiteLayout()
		{
			this._ContentSite = default(EntityRef<ContentSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					if (this._ContentSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_SiteLayout", Storage="_ContentSite", ThisKey="SiteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentSite ContentSite
		{
			get
			{
				return this._ContentSite.Entity;
			}
			set
			{
				ContentSite previousValue = this._ContentSite.Entity;
				if (((previousValue != value) 
							|| (this._ContentSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSite.Entity = null;
						previousValue.SiteLayouts.Remove(this);
					}
					this._ContentSite.Entity = value;
					if ((value != null))
					{
						value.SiteLayouts.Add(this);
						this._SiteId = value.Id;
					}
					else
					{
						this._SiteId = default(long);
					}
					this.SendPropertyChanged("ContentSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteMenuItems")]
	public partial class SiteMenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SiteId;
		
		private string _Title;
		
		private string _Href;
		
		private int _Position;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<ContentSite> _ContentSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHrefChanging(string value);
    partial void OnHrefChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public SiteMenuItem()
		{
			this._ContentSite = default(EntityRef<ContentSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					if (this._ContentSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Href", DbType="NVarChar(255)")]
		public string Href
		{
			get
			{
				return this._Href;
			}
			set
			{
				if ((this._Href != value))
				{
					this.OnHrefChanging(value);
					this.SendPropertyChanging();
					this._Href = value;
					this.SendPropertyChanged("Href");
					this.OnHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_SiteMenuItem", Storage="_ContentSite", ThisKey="SiteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentSite ContentSite
		{
			get
			{
				return this._ContentSite.Entity;
			}
			set
			{
				ContentSite previousValue = this._ContentSite.Entity;
				if (((previousValue != value) 
							|| (this._ContentSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSite.Entity = null;
						previousValue.SiteMenuItems.Remove(this);
					}
					this._ContentSite.Entity = value;
					if ((value != null))
					{
						value.SiteMenuItems.Add(this);
						this._SiteId = value.Id;
					}
					else
					{
						this._SiteId = default(long);
					}
					this.SendPropertyChanged("ContentSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AuthorId;
		
		private long _SiteId;
		
		private long _ContentCategoryId;
		
		private string _Title;
		
		private string _Description;
		
		private short _RevenueType;
		
		private System.Nullable<decimal> _Budget;
		
		private short _Status;
		
		private System.Nullable<System.DateTime> _Deadline;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
		private EntitySet<TaskAnswer> _TaskAnswers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAuthorIdChanging(long value);
    partial void OnAuthorIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnContentCategoryIdChanging(long value);
    partial void OnContentCategoryIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRevenueTypeChanging(short value);
    partial void OnRevenueTypeChanged();
    partial void OnBudgetChanging(System.Nullable<decimal> value);
    partial void OnBudgetChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnDeadlineChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    #endregion
		
		public Task()
		{
			this._TaskAnswers = new EntitySet<TaskAnswer>(new Action<TaskAnswer>(this.attach_TaskAnswers), new Action<TaskAnswer>(this.detach_TaskAnswers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="BigInt NOT NULL")]
		public long AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentCategoryId", DbType="BigInt NOT NULL")]
		public long ContentCategoryId
		{
			get
			{
				return this._ContentCategoryId;
			}
			set
			{
				if ((this._ContentCategoryId != value))
				{
					this.OnContentCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ContentCategoryId = value;
					this.SendPropertyChanged("ContentCategoryId");
					this.OnContentCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueType", DbType="SmallInt NOT NULL")]
		public short RevenueType
		{
			get
			{
				return this._RevenueType;
			}
			set
			{
				if ((this._RevenueType != value))
				{
					this.OnRevenueTypeChanging(value);
					this.SendPropertyChanging();
					this._RevenueType = value;
					this.SendPropertyChanged("RevenueType");
					this.OnRevenueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="Money")]
		public System.Nullable<decimal> Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> Deadline
		{
			get
			{
				return this._Deadline;
			}
			set
			{
				if ((this._Deadline != value))
				{
					this.OnDeadlineChanging(value);
					this.SendPropertyChanging();
					this._Deadline = value;
					this.SendPropertyChanged("Deadline");
					this.OnDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_TaskAnswer", Storage="_TaskAnswers", ThisKey="Id", OtherKey="TaskId")]
		public EntitySet<TaskAnswer> TaskAnswers
		{
			get
			{
				return this._TaskAnswers;
			}
			set
			{
				this._TaskAnswers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskAnswers(TaskAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Task = this;
		}
		
		private void detach_TaskAnswers(TaskAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Task = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskAnswers")]
	public partial class TaskAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _TaskId;
		
		private long _AuthorId;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<Task> _Task;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTaskIdChanging(long value);
    partial void OnTaskIdChanged();
    partial void OnAuthorIdChanging(long value);
    partial void OnAuthorIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public TaskAnswer()
		{
			this._Task = default(EntityRef<Task>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="BigInt NOT NULL")]
		public long TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					if (this._Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="BigInt NOT NULL")]
		public long AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_TaskAnswer", Storage="_Task", ThisKey="TaskId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Task Task
		{
			get
			{
				return this._Task.Entity;
			}
			set
			{
				Task previousValue = this._Task.Entity;
				if (((previousValue != value) 
							|| (this._Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task.Entity = null;
						previousValue.TaskAnswers.Remove(this);
					}
					this._Task.Entity = value;
					if ((value != null))
					{
						value.TaskAnswers.Add(this);
						this._TaskId = value.Id;
					}
					else
					{
						this._TaskId = default(long);
					}
					this.SendPropertyChanged("Task");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TaskAnswer", Storage="_User", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TaskAnswers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TaskAnswers.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActivityItems")]
	public partial class UserActivityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private short _Type;
		
		private string _Data;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public UserActivityItem()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserActivityItem", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserActivityItems.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserActivityItems.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLoginHistoryItems")]
	public partial class UserLoginHistoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _IP;
		
		private string _UserAgent;
		
		private string _City;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public UserLoginHistoryItem()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(4000)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLoginHistoryItem", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLoginHistoryItems.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLoginHistoryItems.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Email;
		
		private string _PasswordHash;
		
		private string _Phone;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _SurName;
		
		private long _RoleId;
		
		private short _Status;
		
		private System.Nullable<System.DateTime> _DateRegistred;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<TaskAnswer> _TaskAnswers;
		
		private EntitySet<UserActivityItem> _UserActivityItems;
		
		private EntitySet<UserLoginHistoryItem> _UserLoginHistoryItems;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnDateRegistredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegistredChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    #endregion
		
		public User()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._TaskAnswers = new EntitySet<TaskAnswer>(new Action<TaskAnswer>(this.attach_TaskAnswers), new Action<TaskAnswer>(this.detach_TaskAnswers));
			this._UserActivityItems = new EntitySet<UserActivityItem>(new Action<UserActivityItem>(this.attach_UserActivityItems), new Action<UserActivityItem>(this.detach_UserActivityItems));
			this._UserLoginHistoryItems = new EntitySet<UserLoginHistoryItem>(new Action<UserLoginHistoryItem>(this.attach_UserLoginHistoryItems), new Action<UserLoginHistoryItem>(this.detach_UserLoginHistoryItems));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="NVarChar(255)")]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistred", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegistred
		{
			get
			{
				return this._DateRegistred;
			}
			set
			{
				if ((this._DateRegistred != value))
				{
					this.OnDateRegistredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistred = value;
					this.SendPropertyChanged("DateRegistred");
					this.OnDateRegistredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article", Storage="_Articles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TaskAnswer", Storage="_TaskAnswers", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<TaskAnswer> TaskAnswers
		{
			get
			{
				return this._TaskAnswers;
			}
			set
			{
				this._TaskAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserActivityItem", Storage="_UserActivityItems", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserActivityItem> UserActivityItems
		{
			get
			{
				return this._UserActivityItems;
			}
			set
			{
				this._UserActivityItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLoginHistoryItem", Storage="_UserLoginHistoryItems", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserLoginHistoryItem> UserLoginHistoryItems
		{
			get
			{
				return this._UserLoginHistoryItems;
			}
			set
			{
				this._UserLoginHistoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(long);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TaskAnswers(TaskAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TaskAnswers(TaskAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserActivityItems(UserActivityItem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserActivityItems(UserActivityItem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLoginHistoryItems(UserLoginHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLoginHistoryItems(UserLoginHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePages")]
	public partial class SitePage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SiteId;
		
		private string _Route;
		
		private string _HTMLTitle;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<ContentSite> _ContentSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(long value);
    partial void OnSiteIdChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnHTMLTitleChanging(string value);
    partial void OnHTMLTitleChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public SitePage()
		{
			this._ContentSite = default(EntityRef<ContentSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="BigInt NOT NULL")]
		public long SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					if (this._ContentSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="NVarChar(255)")]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLTitle", DbType="NVarChar(MAX)")]
		public string HTMLTitle
		{
			get
			{
				return this._HTMLTitle;
			}
			set
			{
				if ((this._HTMLTitle != value))
				{
					this.OnHTMLTitleChanging(value);
					this.SendPropertyChanging();
					this._HTMLTitle = value;
					this.SendPropertyChanged("HTMLTitle");
					this.OnHTMLTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(MAX)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSite_SitePage", Storage="_ContentSite", ThisKey="SiteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentSite ContentSite
		{
			get
			{
				return this._ContentSite.Entity;
			}
			set
			{
				ContentSite previousValue = this._ContentSite.Entity;
				if (((previousValue != value) 
							|| (this._ContentSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSite.Entity = null;
						previousValue.SitePages.Remove(this);
					}
					this._ContentSite.Entity = value;
					if ((value != null))
					{
						value.SitePages.Add(this);
						this._SiteId = value.Id;
					}
					else
					{
						this._SiteId = default(long);
					}
					this.SendPropertyChanged("ContentSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
